{"version":3,"sources":["components/nav/index.js","components/jumbotron/index.js","components/search-components/search-form/index.js","components/book-card/index.js","pages/Search.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","href","Jumbotron","style","height","clear","marginTop","paddingTop","textAlign","Form","props","title","BookCard","author","src","image","synopsis","link","Search","state","search","results","search_form","book_card","Component","App","react_router_dom","nav","jumbotron","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"0SAYeA,MAVf,WACI,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,wBCSOC,MAZf,WACI,OACEL,EAAAC,EAAAC,cAAA,OACEI,MAAO,CAACC,OAAQ,IAAKC,MAAO,OAAQC,UAAW,GAAIC,WAAY,IAAKC,UAAW,UAC/ER,UAAU,aAEVH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,6DAAoDF,EAAAC,EAAAC,cAAA,WAApD,yCCSOU,MAff,SAAcC,GACV,OACIb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAiBU,EAAMC,QAExCd,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iCAAlB,aCGDY,MAZf,SAAkBF,GACd,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcU,EAAMC,OAClCd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,cAAwCU,EAAMG,QAC9ChB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAac,IAAKJ,EAAMK,QACvClB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYU,EAAMM,UAC/BnB,EAAAC,EAAAC,cAAA,KAAGE,KAAMS,EAAMO,MAAf,UCYGC,6MAhBbC,MAAO,CACLC,OAAQ,GACRC,QAAS,4EAGP,OACExB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAD,cATSC,aCmBNC,mLAdX,OACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACE7B,EAAAC,EAAAC,cAAC4B,EAAD,MACA9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC6B,EAAD,MACA/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWd,cAR3BM,aCGZS,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5B,QACfsB,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KChEjEC,IAASC,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAwB,OAAMH,GAAN,sBAEN5B,EAwCX,SAAiCO,GAE/ByB,MAAMzB,GACHI,KAAK,SAAAsB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C7B,UAAUC,cAAc6B,MAAM3B,KAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,KAAK,WAC7BT,OAAOC,SAASqC,aAKpBlC,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEAzDAsB,CAAwBlC,GAHxBD,EAAgBC,MC7BxBmC","file":"static/js/main.603ccaa8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Nav() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          React Reading List\r\n        </a>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n      <div\r\n        style={{height: 300, clear: \"both\", marginTop: 50, paddingTop: 120, textAlign: \"center\"}}\r\n        className=\"jumbotron\"\r\n      >\r\n        <h1>Google Books Searcher</h1>\r\n        <h3>Search and save books from the Google Books API <br></br> Search a book to get started</h3>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React from 'react';\r\nimport \"./style.css\"\r\n\r\nfunction Form(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"form-container container mb-3\">\r\n                <h4 className=\"mt-3\">Book Search</h4>\r\n                <div className=\"form-group\">\r\n                <input className=\"form-control\" >{props.title}</input>\r\n                </div>\r\n                <button className=\"btn btn-primary search-button\">Search</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Form","import React from \"react\";\r\n\r\nfunction BookCard(props) {\r\n    return (\r\n        <div className=\"container book-card\">\r\n            <h4 className=\"book-title\">{props.title}</h4>\r\n            <h5 className=\"book-author\">Author(s): {props.author}</h5>\r\n            <img className=\"book-image\" src={props.image}></img>\r\n            <p className=\"synopsis\">{props.synopsis}</p>\r\n            <a href={props.link}>Link</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookCard;","import React, {Component} from \"react\";\r\nimport Form from \"../components/search-components/search-form\"\r\nimport BookCard from \"../components/book-card\"\r\n\r\nclass Search extends Component {\r\n  state= {\r\n    search: \"\",\r\n    results: [],\r\n  }\r\n  render() {\r\n      return (\r\n        <div>\r\n            <Form />\r\n            <BookCard\r\n              \r\n            />\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { Component } from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport \"./App.css\";\nimport Nav from \"./components/nav\";\nimport Jumbotron from \"./components/jumbotron\";\nimport Search from \"./pages/Search\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Nav />\n        <div className=\"container\">\n          <Jumbotron />\n          <Switch>\n            <Route exact path=\"/\" component={Search} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}